import InterfaceComponent from './interface.vue';
import { defineInterface } from '@directus/extensions-sdk';

export default defineInterface({
	id: 'custom',
	name: 'CMA EDITOR',
	icon: 'box',
	description: 'This is my custom interface!',
	component: InterfaceComponent,
	types: ['json'],
	group: 'standard',
	options: [
		{
			field: 'placeholder',
			name: '$t:placeholder',
			meta: {
				width: 'half',
				interface: 'text-input',
				options: {
					placeholder: '$t:enter_a_placeholder',
				},
			},
		},
		{
			field: 'font',
			name: '$t:font',
			type: 'string',
			meta: {
				width: 'half',
				interface: 'select-dropdown',
				options: {
					choices: [
						{
							text: '$t:sans_serif',
							value: 'sans-serif',
						},
						{
							text: '$t:monospace',
							value: 'monospace',
						},
						{
							text: '$t:serif',
							value: 'serif',
						},
					],
				},
			},
			schema: {
				default_value: 'sans-serif',
			},
		},
		{
			field: 'tools',
			name: '$t:interfaces.input-rich-text-html.toolbar',
			type: 'json',
			schema: {
				default_value: [
					'contactForm',
					'supportForm',
					'headerNew',
					'textLine',
					'headLine',
					'formCols',
					'raw',
					'columns',
					'imageComponent',
					'headerText',
					'paragraph',
					'container',
					'packages',
					'flowBite_HeroOne',
					'flowBite_HeroSecond',
				],
			},
			meta: {
				width: 'half',
				interface: 'select-multiple-dropdown',
				options: {
					choices: [
						{
							value: 'textLine',
							text: 'Text Line',
						},
						{
							value: 'headerNew',
							text: 'Header Component',
						},
						{
							value: 'contactForm',
							text: 'Contact Forms',
						},
						{
							value: 'supportForm',
							text: 'Support Forms',
						},
						{
							value: 'headLine',
							text: 'Head Line (Secure Form)',
						},
						{
							value: 'formCols',
							text: 'Form Step 1',
						},
						{
							value: 'checkoutForm',
							text: 'Checkout Form',
						},
						{
							value: 'raw',
							text: 'Raw HTML',
						},
						{
							value: 'columns',
							text: 'Row Columns',
						},
						{
							value: 'imageComponent',
							text: 'Image',
						},
						{
							value: 'headerText',
							text: 'Header Text',
						},
						{
							value: 'paragraph',
							text: 'Paragraph',
						},
						{
							value: 'container',
							text: 'container',
						},
						{
							value: 'packages',
							text: 'Packages',
						},
						{
							value: 'flowBite_HeroOne',
							text: 'FlowBite | Hero 1',
						},
						{
							value: 'flowBite_HeroSecond',
							text: 'FlowBite | Hero 2',
						},
					],
				},
			},
		},
		{
			field: 'bordered',
			name: '$t:displays.formatted-value.border',
			type: 'boolean',
			meta: {
				width: 'half',
				interface: 'boolean',
				options: {
					label: '$t:displays.formatted-value.border_label',
				},
			},
			schema: {
				default_value: true,
			},
		},
		{
			field: 'folder',
			name: '$t:interfaces.system-folder.folder',
			type: 'uuid',
			meta: {
				width: 'full',
				interface: 'system-folder',
				note: '$t:interfaces.system-folder.field_hint',
			},
			schema: {
				default_value: undefined,
			},
		},
	],
});
